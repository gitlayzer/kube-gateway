# 工作流的名称
name: Go Release Binary Builder

# 触发工作流的事件
on:
  push:
    tags:
      - 'v*.*.*'

  release:
    types: [published]

# 定义工作流中的任务
jobs:
  build-and-release:
    # 指定运行此任务的虚拟机环境
    runs-on: ubuntu-latest

    # 授予权限
    permissions:
      contents: write

    # 定义任务中的各个步骤
    steps:
      # 第一步：检出（拉取）你的代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # 拉取所有历史记录，以便 git describe 能正常工作
          fetch-depth: 0

      # 第二步：设置 Go 语言环境
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build for Linux (using native Go command)
        # 在这个步骤中设置环境变量，告诉 Go 编译器我们的目标平台
        env:
          GOOS: linux
          GOARCH: amd64
        # 执行原生的 go build 命令
        # -v: 打印详细的编译信息
        # -o: 指定输出文件名
        run: |
          go build -v -o kube-gateway_linux_amd64 .

      # 第四步：创建 Release 并上传构建产物
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          # 要上传的文件列表
          files: ./kube-gateway_linux_amd64
        env:
          # GitHub Actions 会自动提供这个 GITHUB_TOKEN，用于授权
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}